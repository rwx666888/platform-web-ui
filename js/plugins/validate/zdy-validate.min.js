/* 自定义验证规则扩展 Last modified time :2017-08-28 */
/* 只输入字母 */
$.validator.addMethod("ck-letter",function(value,element,params){var reg_=/^[a-zA-Z]+$/;return this.optional(element)||reg_.test(value)},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_letter"]);$.validator.addMethod("ck-numorletter",function(value,element,params){var reg_=/^[0-9a-zA-Z]+$/;return this.optional(element)||reg_.test(value)},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_numOrLetter"]);$.validator.addMethod("ck-numorletteroruline",function(value,element,params){var reg_=/^[0-9a-zA-Z_]+$/;return this.optional(element)||reg_.test(value)},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_numOrLetterOrUline"]);$.validator.addMethod("ck-chinese",function(value,element,params){var reg_=/^[\u4e00-\u9fa5]+$/;return this.optional(element)||reg_.test(value)},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_chinese"]);$.validator.addMethod("ck-numandletter",function(value,element,params){var reg_=/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/;return this.optional(element)||reg_.test(value)},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_numAndLetter"]);$.validator.addMethod("ck-email",function(value,element,params){var reg_=/\w[-\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\.)+[A-Za-z]{2,14}/;return this.optional(element)||reg_.test(value)},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_email"]);$.validator.addMethod("ck-phone",function(value,element,params){var reg_=/^((?!1{11})1\d{10})|((?!1{10})1\d{9})$/;return this.optional(element)||reg_.test(value)},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_phone"]);$.validator.addMethod("ck-idcard",function(value,element,params){var len,re,type_;num=value.toUpperCase();if(!(/(^\d{15}$)|(^\d{17}([0-9]|X)$)/.test(num))){type_=false}else{len=num.length;if(len==15){re=new RegExp(/^(\d{6})(\d{2})(\d{2})(\d{2})(\d{3})$/);var arrSplit=num.match(re);var dtmBirth=new Date('19'+arrSplit[2]+'/'+arrSplit[3]+'/'+arrSplit[4]);var bGoodDay;bGoodDay=(dtmBirth.getYear()==Number(arrSplit[2]))&&((dtmBirth.getMonth()+1)==Number(arrSplit[3]))&&(dtmBirth.getDate()==Number(arrSplit[4]));if(!bGoodDay){type_=false}else{var arrInt=[7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2];var arrCh=['1','0','X','9','8','7','6','5','4','3','2'];var nTemp=0,i;num=num.substr(0,6)+'19'+num.substr(6,num.length-6);for(i=0;i<17;i+=1){nTemp+=num.substr(i,1)*arrInt[i]}num+=arrCh[nTemp%11];type_=true}}else if(len==18){re=new RegExp(/^(\d{6})(\d{4})(\d{2})(\d{2})(\d{3})([0-9]|X)$/);var arrSplit=num.match(re);var dtmBirth=new Date(arrSplit[2]+"/"+arrSplit[3]+"/"+arrSplit[4]);var bGoodDay;bGoodDay=(dtmBirth.getFullYear()==Number(arrSplit[2]))&&((dtmBirth.getMonth()+1)==Number(arrSplit[3]))&&(dtmBirth.getDate()==Number(arrSplit[4]));if(!bGoodDay){type_=false}else{var valnum;var arrInt=[7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2];var arrCh=['1','0','X','9','8','7','6','5','4','3','2'];var nTemp=0,i;for(i=0;i<17;i+=1){nTemp+=num.substr(i,1)*arrInt[i]}valnum=arrCh[nTemp%11];if(valnum!=num.substr(17,1)){type_=false}type_=true}}}return this.optional(element)||type_},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_idCaid"]);$.validator.addMethod("ck-zipcode",function(value,element,params){var reg_=/^[1-9]\d{5}(?!\d)$/;return this.optional(element)||reg_.test(value)},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_zipCode"]);$.validator.addMethod("require_from_group",function(value,element,options){var $fields=$(options[1],element.form),$fieldsFirst=$fields.eq(0),validator=$fieldsFirst.data("valid_req_grp")?$fieldsFirst.data("valid_req_grp"):$.extend({},this),isValid=$fields.filter(function(){return validator.elementValue(this)}).length>=options[0];$fieldsFirst.data("valid_req_grp",validator);if(!$(element).data("being_validated")){$fields.data("being_validated",true);$fields.each(function(){validator.element(this)});$fields.data("being_validated",false)}return isValid},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_require_from_group"]);$.validator.addMethod("skip_or_fill_minimum",function(value,element,options){var $fields=$(options[1],element.form),$fieldsFirst=$fields.eq(0),validator=$fieldsFirst.data("valid_skip")?$fieldsFirst.data("valid_skip"):$.extend({},this),numberFilled=$fields.filter(function(){return validator.elementValue(this)}).length,isValid=numberFilled===0||numberFilled>=options[0];$fieldsFirst.data("valid_skip",validator);if(!$(element).data("being_validated")){$fields.data("being_validated",true);$fields.each(function(){validator.element(this)});$fields.data("being_validated",false)}return isValid},LOCAL_MESSAGE_DATA["platform.plugin.validate.valid_skip_or_fill_minimum"]);